### YamlMime:ManagedReference
items:
- uid: NodaTime.DateTimeZoneProviders
  commentId: T:NodaTime.DateTimeZoneProviders
  id: DateTimeZoneProviders
  parent: NodaTime
  children:
  - NodaTime.DateTimeZoneProviders.Bcl
  - NodaTime.DateTimeZoneProviders.Serialization
  - NodaTime.DateTimeZoneProviders.Tzdb
  langs:
  - csharp
  - vb
  name: DateTimeZoneProviders
  nameWithType: DateTimeZoneProviders
  fullName: NodaTime.DateTimeZoneProviders
  type: Class
  source:
    id: DateTimeZoneProviders
    path: C:\users\jon\Test\Projects\nodatime.org\build\history\main\3.0.x\src\NodaTime\DateTimeZoneProviders.cs
    startLine: 14
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nStatic access to date/time zone providers built into Noda Time and for global configuration where this is unavoidable.\nAll properties are thread-safe, and the providers returned by the read-only properties cache their results.\n"
  example: []
  syntax:
    content: public static class DateTimeZoneProviders
    content.vb: Public Module DateTimeZoneProviders
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NodaTime.DateTimeZoneProviders.Tzdb
  commentId: P:NodaTime.DateTimeZoneProviders.Tzdb
  id: Tzdb
  parent: NodaTime.DateTimeZoneProviders
  langs:
  - csharp
  - vb
  name: Tzdb
  nameWithType: DateTimeZoneProviders.Tzdb
  fullName: NodaTime.DateTimeZoneProviders.Tzdb
  type: Property
  source:
    id: Tzdb
    path: C:\users\jon\Test\Projects\nodatime.org\build\history\main\3.0.x\src\NodaTime\DateTimeZoneProviders.cs
    startLine: 22
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets a time zone provider which uses a <xref href=\"NodaTime.TimeZones.TzdbDateTimeZoneSource\" data-throw-if-not-resolved=\"false\"></xref>.\nThe underlying source is <xref href=\"NodaTime.TimeZones.TzdbDateTimeZoneSource.Default\" data-throw-if-not-resolved=\"false\"></xref>, which is initialized from\nresources within the NodaTime assembly.\n"
  example: []
  syntax:
    content: public static IDateTimeZoneProvider Tzdb { get; }
    parameters: []
    return:
      type: NodaTime.IDateTimeZoneProvider
      description: A time zone provider using a <code>TzdbDateTimeZoneSource</code>.
    content.vb: Public Shared ReadOnly Property Tzdb As IDateTimeZoneProvider
  overload: NodaTime.DateTimeZoneProviders.Tzdb*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.DateTimeZoneProviders.Bcl
  commentId: P:NodaTime.DateTimeZoneProviders.Bcl
  id: Bcl
  parent: NodaTime.DateTimeZoneProviders
  langs:
  - csharp
  - vb
  name: Bcl
  nameWithType: DateTimeZoneProviders.Bcl
  fullName: NodaTime.DateTimeZoneProviders.Bcl
  type: Property
  source:
    id: Bcl
    path: C:\users\jon\Test\Projects\nodatime.org\build\history\main\3.0.x\src\NodaTime\DateTimeZoneProviders.cs
    startLine: 55
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets a time zone provider which uses a <xref href=\"NodaTime.TimeZones.BclDateTimeZoneSource\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nSee note on <xref href=\"NodaTime.TimeZones.BclDateTimeZone\" data-throw-if-not-resolved=\"false\"></xref> for details of some incompatibilities with the BCL.\n</p>\n<p>\nIn Noda Time 1.x and 2.x, this property is only available on the .NET Framework builds of Noda Time, and not\nthe PCL (Noda Time 1.x) or .NET Standard 1.3 (Noda Time 2.x) builds.\n</p>\n"
  example: []
  syntax:
    content: public static IDateTimeZoneProvider Bcl { get; }
    parameters: []
    return:
      type: NodaTime.IDateTimeZoneProvider
      description: A time zone provider which uses a <code>BclDateTimeZoneSource</code>.
    content.vb: Public Shared ReadOnly Property Bcl As IDateTimeZoneProvider
  overload: NodaTime.DateTimeZoneProviders.Bcl*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NodaTime.DateTimeZoneProviders.Serialization
  commentId: P:NodaTime.DateTimeZoneProviders.Serialization
  id: Serialization
  parent: NodaTime.DateTimeZoneProviders
  langs:
  - csharp
  - vb
  name: Serialization
  nameWithType: DateTimeZoneProviders.Serialization
  fullName: NodaTime.DateTimeZoneProviders.Serialization
  type: Property
  source:
    id: Serialization
    path: C:\users\jon\Test\Projects\nodatime.org\build\history\main\3.0.x\src\NodaTime\DateTimeZoneProviders.cs
    startLine: 63
  assemblies:
  - NodaTime
  namespace: NodaTime
  summary: "\nGets the <xref href=\"NodaTime.IDateTimeZoneProvider\" data-throw-if-not-resolved=\"false\"></xref> to use to interpret a time zone ID read as part of\nXML serialization. This property is obsolete as of version 3.0; the functionality still exists\nin <xref href=\"NodaTime.Xml.XmlSerializationSettings.DateTimeZoneProvider\" data-throw-if-not-resolved=\"false\"></xref>, which this property delegates\nto. (The behavior has not changed; this is purely an exercise in moving/renaming.)\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This property exists primarily for binary backward compatibility. Please use NodaTime.Xml.XmlSerializationSettings.DateTimeZoneProvider instead.")]

      public static IDateTimeZoneProvider Serialization { get; set; }
    parameters: []
    return:
      type: NodaTime.IDateTimeZoneProvider
    content.vb: >-
      <Obsolete("This property exists primarily for binary backward compatibility. Please use NodaTime.Xml.XmlSerializationSettings.DateTimeZoneProvider instead.")>

      Public Shared Property Serialization As IDateTimeZoneProvider
  overload: NodaTime.DateTimeZoneProviders.Serialization*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This property exists primarily for binary backward compatibility. Please use NodaTime.Xml.XmlSerializationSettings.DateTimeZoneProvider instead.
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NodaTime
  commentId: N:NodaTime
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.TimeZones.TzdbDateTimeZoneSource
  commentId: T:NodaTime.TimeZones.TzdbDateTimeZoneSource
  parent: NodaTime.TimeZones
  name: TzdbDateTimeZoneSource
  nameWithType: TzdbDateTimeZoneSource
  fullName: NodaTime.TimeZones.TzdbDateTimeZoneSource
- uid: NodaTime.TimeZones.TzdbDateTimeZoneSource.Default
  commentId: P:NodaTime.TimeZones.TzdbDateTimeZoneSource.Default
  isExternal: true
- uid: NodaTime.DateTimeZoneProviders.Tzdb*
  commentId: Overload:NodaTime.DateTimeZoneProviders.Tzdb
  name: Tzdb
  nameWithType: DateTimeZoneProviders.Tzdb
  fullName: NodaTime.DateTimeZoneProviders.Tzdb
- uid: NodaTime.IDateTimeZoneProvider
  commentId: T:NodaTime.IDateTimeZoneProvider
  parent: NodaTime
  name: IDateTimeZoneProvider
  nameWithType: IDateTimeZoneProvider
  fullName: NodaTime.IDateTimeZoneProvider
- uid: NodaTime.TimeZones
  commentId: N:NodaTime.TimeZones
  name: NodaTime.TimeZones
  nameWithType: NodaTime.TimeZones
  fullName: NodaTime.TimeZones
- uid: NodaTime.TimeZones.BclDateTimeZoneSource
  commentId: T:NodaTime.TimeZones.BclDateTimeZoneSource
  name: BclDateTimeZoneSource
  nameWithType: BclDateTimeZoneSource
  fullName: NodaTime.TimeZones.BclDateTimeZoneSource
- uid: NodaTime.TimeZones.BclDateTimeZone
  commentId: T:NodaTime.TimeZones.BclDateTimeZone
  parent: NodaTime.TimeZones
  name: BclDateTimeZone
  nameWithType: BclDateTimeZone
  fullName: NodaTime.TimeZones.BclDateTimeZone
- uid: NodaTime.DateTimeZoneProviders.Bcl*
  commentId: Overload:NodaTime.DateTimeZoneProviders.Bcl
  name: Bcl
  nameWithType: DateTimeZoneProviders.Bcl
  fullName: NodaTime.DateTimeZoneProviders.Bcl
- uid: NodaTime.Xml.XmlSerializationSettings.DateTimeZoneProvider
  commentId: P:NodaTime.Xml.XmlSerializationSettings.DateTimeZoneProvider
  isExternal: true
- uid: NodaTime.DateTimeZoneProviders.Serialization*
  commentId: Overload:NodaTime.DateTimeZoneProviders.Serialization
  name: Serialization
  nameWithType: DateTimeZoneProviders.Serialization
  fullName: NodaTime.DateTimeZoneProviders.Serialization
shouldSkipMarkup: true
