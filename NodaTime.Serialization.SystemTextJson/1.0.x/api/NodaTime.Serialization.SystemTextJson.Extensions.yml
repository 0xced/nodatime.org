### YamlMime:ManagedReference
items:
- uid: NodaTime.Serialization.SystemTextJson.Extensions
  commentId: T:NodaTime.Serialization.SystemTextJson.Extensions
  id: Extensions
  parent: NodaTime.Serialization.SystemTextJson
  children:
  - NodaTime.Serialization.SystemTextJson.Extensions.ConfigureForNodaTime(System.Text.Json.JsonSerializerOptions,NodaTime.IDateTimeZoneProvider)
  - NodaTime.Serialization.SystemTextJson.Extensions.WithIsoDateIntervalConverter(System.Text.Json.JsonSerializerOptions)
  - NodaTime.Serialization.SystemTextJson.Extensions.WithIsoIntervalConverter(System.Text.Json.JsonSerializerOptions)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: NodaTime.Serialization.SystemTextJson.Extensions
  type: Class
  source:
    id: Extensions
    path: C:\Users\jon\Test\Projects\nodatime.org\build\history\serialization\src\NodaTime.Serialization.SystemTextJson\Extensions.cs
    startLine: 14
  assemblies:
  - NodaTime.Serialization.SystemTextJson
  namespace: NodaTime.Serialization.SystemTextJson
  summary: "\nStatic class containing extension methods to configure System.Text.Json for Noda Time types.\n"
  example: []
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NodaTime.Serialization.SystemTextJson.Extensions.ConfigureForNodaTime(System.Text.Json.JsonSerializerOptions,NodaTime.IDateTimeZoneProvider)
  commentId: M:NodaTime.Serialization.SystemTextJson.Extensions.ConfigureForNodaTime(System.Text.Json.JsonSerializerOptions,NodaTime.IDateTimeZoneProvider)
  id: ConfigureForNodaTime(System.Text.Json.JsonSerializerOptions,NodaTime.IDateTimeZoneProvider)
  isExtensionMethod: true
  parent: NodaTime.Serialization.SystemTextJson.Extensions
  langs:
  - csharp
  - vb
  name: ConfigureForNodaTime(JsonSerializerOptions, IDateTimeZoneProvider)
  nameWithType: Extensions.ConfigureForNodaTime(JsonSerializerOptions, IDateTimeZoneProvider)
  fullName: NodaTime.Serialization.SystemTextJson.Extensions.ConfigureForNodaTime(System.Text.Json.JsonSerializerOptions, NodaTime.IDateTimeZoneProvider)
  type: Method
  source:
    id: ConfigureForNodaTime
    path: C:\Users\jon\Test\Projects\nodatime.org\build\history\serialization\src\NodaTime.Serialization.SystemTextJson\Extensions.cs
    startLine: 22
  assemblies:
  - NodaTime.Serialization.SystemTextJson
  namespace: NodaTime.Serialization.SystemTextJson
  summary: "\nConfigures System.Text.Json with everything required to properly serialize and deserialize NodaTime data types.\n"
  example: []
  syntax:
    content: public static JsonSerializerOptions ConfigureForNodaTime(this JsonSerializerOptions options, IDateTimeZoneProvider provider)
    parameters:
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: The existing options to add Noda Time converters to.
    - id: provider
      type: NodaTime.IDateTimeZoneProvider
      description: The time zone provider to use when parsing time zones and zoned date/times.
    return:
      type: System.Text.Json.JsonSerializerOptions
      description: The original <code data-dev-comment-type="paramref" class="paramref">options</code> value, for further chaining.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConfigureForNodaTime(options As JsonSerializerOptions, provider As IDateTimeZoneProvider) As JsonSerializerOptions
  overload: NodaTime.Serialization.SystemTextJson.Extensions.ConfigureForNodaTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Serialization.SystemTextJson.Extensions.WithIsoIntervalConverter(System.Text.Json.JsonSerializerOptions)
  commentId: M:NodaTime.Serialization.SystemTextJson.Extensions.WithIsoIntervalConverter(System.Text.Json.JsonSerializerOptions)
  id: WithIsoIntervalConverter(System.Text.Json.JsonSerializerOptions)
  isExtensionMethod: true
  parent: NodaTime.Serialization.SystemTextJson.Extensions
  langs:
  - csharp
  - vb
  name: WithIsoIntervalConverter(JsonSerializerOptions)
  nameWithType: Extensions.WithIsoIntervalConverter(JsonSerializerOptions)
  fullName: NodaTime.Serialization.SystemTextJson.Extensions.WithIsoIntervalConverter(System.Text.Json.JsonSerializerOptions)
  type: Method
  source:
    id: WithIsoIntervalConverter
    path: C:\Users\jon\Test\Projects\nodatime.org\build\history\serialization\src\NodaTime.Serialization.SystemTextJson\Extensions.cs
    startLine: 45
  assemblies:
  - NodaTime.Serialization.SystemTextJson
  namespace: NodaTime.Serialization.SystemTextJson
  summary: "\nConfigures the given serializer settings to use <xref href=\"NodaTime.Serialization.SystemTextJson.NodaConverters.IsoIntervalConverter\" data-throw-if-not-resolved=\"false\"></xref>.\nAny other converters which can convert <xref href=\"NodaTime.Interval\" data-throw-if-not-resolved=\"false\"></xref> are removed from the serializer.\n"
  example: []
  syntax:
    content: public static JsonSerializerOptions WithIsoIntervalConverter(this JsonSerializerOptions options)
    parameters:
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: The existing serializer settings to add Noda Time converters to.
    return:
      type: System.Text.Json.JsonSerializerOptions
      description: The original <code data-dev-comment-type="paramref" class="paramref">options</code> value, for further chaining.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithIsoIntervalConverter(options As JsonSerializerOptions) As JsonSerializerOptions
  overload: NodaTime.Serialization.SystemTextJson.Extensions.WithIsoIntervalConverter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Serialization.SystemTextJson.Extensions.WithIsoDateIntervalConverter(System.Text.Json.JsonSerializerOptions)
  commentId: M:NodaTime.Serialization.SystemTextJson.Extensions.WithIsoDateIntervalConverter(System.Text.Json.JsonSerializerOptions)
  id: WithIsoDateIntervalConverter(System.Text.Json.JsonSerializerOptions)
  isExtensionMethod: true
  parent: NodaTime.Serialization.SystemTextJson.Extensions
  langs:
  - csharp
  - vb
  name: WithIsoDateIntervalConverter(JsonSerializerOptions)
  nameWithType: Extensions.WithIsoDateIntervalConverter(JsonSerializerOptions)
  fullName: NodaTime.Serialization.SystemTextJson.Extensions.WithIsoDateIntervalConverter(System.Text.Json.JsonSerializerOptions)
  type: Method
  source:
    id: WithIsoDateIntervalConverter
    path: C:\Users\jon\Test\Projects\nodatime.org\build\history\serialization\src\NodaTime.Serialization.SystemTextJson\Extensions.cs
    startLine: 61
  assemblies:
  - NodaTime.Serialization.SystemTextJson
  namespace: NodaTime.Serialization.SystemTextJson
  summary: "\nConfigures the given serializer settings to use <xref href=\"NodaTime.Serialization.SystemTextJson.NodaConverters.IsoDateIntervalConverter\" data-throw-if-not-resolved=\"false\"></xref>.\nAny other converters which can convert <xref href=\"NodaTime.DateInterval\" data-throw-if-not-resolved=\"false\"></xref> are removed from the serializer.\n"
  example: []
  syntax:
    content: public static JsonSerializerOptions WithIsoDateIntervalConverter(this JsonSerializerOptions options)
    parameters:
    - id: options
      type: System.Text.Json.JsonSerializerOptions
      description: The existing serializer settings to add Noda Time converters to.
    return:
      type: System.Text.Json.JsonSerializerOptions
      description: The original <code data-dev-comment-type="paramref" class="paramref">options</code> value, for further chaining.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithIsoDateIntervalConverter(options As JsonSerializerOptions) As JsonSerializerOptions
  overload: NodaTime.Serialization.SystemTextJson.Extensions.WithIsoDateIntervalConverter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NodaTime.Serialization.SystemTextJson
  commentId: N:NodaTime.Serialization.SystemTextJson
  name: NodaTime.Serialization.SystemTextJson
  nameWithType: NodaTime.Serialization.SystemTextJson
  fullName: NodaTime.Serialization.SystemTextJson
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NodaTime.Serialization.SystemTextJson.Extensions.ConfigureForNodaTime*
  commentId: Overload:NodaTime.Serialization.SystemTextJson.Extensions.ConfigureForNodaTime
  name: ConfigureForNodaTime
  nameWithType: Extensions.ConfigureForNodaTime
  fullName: NodaTime.Serialization.SystemTextJson.Extensions.ConfigureForNodaTime
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: NodaTime.IDateTimeZoneProvider
  commentId: T:NodaTime.IDateTimeZoneProvider
  parent: NodaTime
  isExternal: true
  name: IDateTimeZoneProvider
  nameWithType: IDateTimeZoneProvider
  fullName: NodaTime.IDateTimeZoneProvider
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
- uid: NodaTime
  commentId: N:NodaTime
  isExternal: true
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: NodaTime.Serialization.SystemTextJson.NodaConverters.IsoIntervalConverter
  commentId: P:NodaTime.Serialization.SystemTextJson.NodaConverters.IsoIntervalConverter
  isExternal: true
- uid: NodaTime.Interval
  commentId: T:NodaTime.Interval
  isExternal: true
- uid: NodaTime.Serialization.SystemTextJson.Extensions.WithIsoIntervalConverter*
  commentId: Overload:NodaTime.Serialization.SystemTextJson.Extensions.WithIsoIntervalConverter
  name: WithIsoIntervalConverter
  nameWithType: Extensions.WithIsoIntervalConverter
  fullName: NodaTime.Serialization.SystemTextJson.Extensions.WithIsoIntervalConverter
- uid: NodaTime.Serialization.SystemTextJson.NodaConverters.IsoDateIntervalConverter
  commentId: P:NodaTime.Serialization.SystemTextJson.NodaConverters.IsoDateIntervalConverter
  isExternal: true
- uid: NodaTime.DateInterval
  commentId: T:NodaTime.DateInterval
  isExternal: true
- uid: NodaTime.Serialization.SystemTextJson.Extensions.WithIsoDateIntervalConverter*
  commentId: Overload:NodaTime.Serialization.SystemTextJson.Extensions.WithIsoDateIntervalConverter
  name: WithIsoDateIntervalConverter
  nameWithType: Extensions.WithIsoDateIntervalConverter
  fullName: NodaTime.Serialization.SystemTextJson.Extensions.WithIsoDateIntervalConverter
shouldSkipMarkup: true
