### YamlMime:ManagedReference
items:
- uid: NodaTime.Serialization.Protobuf.ProtobufExtensions
  commentId: T:NodaTime.Serialization.Protobuf.ProtobufExtensions
  id: ProtobufExtensions
  parent: NodaTime.Serialization.Protobuf
  children:
  - NodaTime.Serialization.Protobuf.ProtobufExtensions.ToInstant(Google.Protobuf.WellKnownTypes.Timestamp)
  - NodaTime.Serialization.Protobuf.ProtobufExtensions.ToIsoDayOfWeek(Google.Type.DayOfWeek)
  - NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalDate(Google.Type.Date)
  - NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalTime(Google.Type.TimeOfDay)
  - NodaTime.Serialization.Protobuf.ProtobufExtensions.ToNodaDuration(Google.Protobuf.WellKnownTypes.Duration)
  langs:
  - csharp
  - vb
  name: ProtobufExtensions
  nameWithType: ProtobufExtensions
  fullName: NodaTime.Serialization.Protobuf.ProtobufExtensions
  type: Class
  source:
    id: ProtobufExtensions
    path: C:\users\jon\Test\Projects\nodatime.org\build\history\serialization\src\NodaTime.Serialization.Protobuf\ProtobufExtensions.cs
    startLine: 16
  assemblies:
  - NodaTime.Serialization.Protobuf
  namespace: NodaTime.Serialization.Protobuf
  summary: "\nExtension methods on the Google.Protobuf time-related types to convert them to Noda Time types.\n"
  example: []
  syntax:
    content: public static class ProtobufExtensions
    content.vb: Public Module ProtobufExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToNodaDuration(Google.Protobuf.WellKnownTypes.Duration)
  commentId: M:NodaTime.Serialization.Protobuf.ProtobufExtensions.ToNodaDuration(Google.Protobuf.WellKnownTypes.Duration)
  id: ToNodaDuration(Google.Protobuf.WellKnownTypes.Duration)
  isExtensionMethod: true
  parent: NodaTime.Serialization.Protobuf.ProtobufExtensions
  langs:
  - csharp
  - vb
  name: ToNodaDuration(Duration)
  nameWithType: ProtobufExtensions.ToNodaDuration(Duration)
  fullName: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToNodaDuration(Google.Protobuf.WellKnownTypes.Duration)
  type: Method
  source:
    id: ToNodaDuration
    path: C:\users\jon\Test\Projects\nodatime.org\build\history\serialization\src\NodaTime.Serialization.Protobuf\ProtobufExtensions.cs
    startLine: 33
  assemblies:
  - NodaTime.Serialization.Protobuf
  namespace: NodaTime.Serialization.Protobuf
  summary: "\nConverts a Protobuf <xref href=\"Google.Protobuf.WellKnownTypes.Duration\" data-throw-if-not-resolved=\"false\"></xref> to a Noda Time <xref href=\"NodaTime.Duration\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nEvery valid Protobuf duration can be represented in Noda Time without loss of information.\n"
  example: []
  syntax:
    content: public static Duration ToNodaDuration(this Duration duration)
    parameters:
    - id: duration
      type: Google.Protobuf.WellKnownTypes.Duration
      description: The duration to convert. Must not be null.
    return:
      type: NodaTime.Duration
      description: The Noda Time representation.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToNodaDuration(duration As Duration) As Duration
  overload: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToNodaDuration*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code data-dev-comment-type="paramref" class="paramref">duration</code> represents an invalid duration.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">duration</code> is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToInstant(Google.Protobuf.WellKnownTypes.Timestamp)
  commentId: M:NodaTime.Serialization.Protobuf.ProtobufExtensions.ToInstant(Google.Protobuf.WellKnownTypes.Timestamp)
  id: ToInstant(Google.Protobuf.WellKnownTypes.Timestamp)
  isExtensionMethod: true
  parent: NodaTime.Serialization.Protobuf.ProtobufExtensions
  langs:
  - csharp
  - vb
  name: ToInstant(Timestamp)
  nameWithType: ProtobufExtensions.ToInstant(Timestamp)
  fullName: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToInstant(Google.Protobuf.WellKnownTypes.Timestamp)
  type: Method
  source:
    id: ToInstant
    path: C:\users\jon\Test\Projects\nodatime.org\build\history\serialization\src\NodaTime.Serialization.Protobuf\ProtobufExtensions.cs
    startLine: 69
  assemblies:
  - NodaTime.Serialization.Protobuf
  namespace: NodaTime.Serialization.Protobuf
  summary: "\nConverts a Protobuf <xref href=\"Google.Protobuf.WellKnownTypes.Timestamp\" data-throw-if-not-resolved=\"false\"></xref> to a Noda Time <xref href=\"NodaTime.Instant\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nEvery valid Protobuf timestamp can be represented in Noda Time without loss of information.\n"
  example: []
  syntax:
    content: public static Instant ToInstant(this Timestamp timestamp)
    parameters:
    - id: timestamp
      type: Google.Protobuf.WellKnownTypes.Timestamp
      description: The timestamp to convert. Must not be null.
    return:
      type: NodaTime.Instant
      description: The Noda Time representation.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInstant(timestamp As Timestamp) As Instant
  overload: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToInstant*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code data-dev-comment-type="paramref" class="paramref">timestamp</code> represents an invalid timestamp.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">timestamp</code> is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalTime(Google.Type.TimeOfDay)
  commentId: M:NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalTime(Google.Type.TimeOfDay)
  id: ToLocalTime(Google.Type.TimeOfDay)
  isExtensionMethod: true
  parent: NodaTime.Serialization.Protobuf.ProtobufExtensions
  langs:
  - csharp
  - vb
  name: ToLocalTime(TimeOfDay)
  nameWithType: ProtobufExtensions.ToLocalTime(TimeOfDay)
  fullName: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalTime(Google.Type.TimeOfDay)
  type: Method
  source:
    id: ToLocalTime
    path: C:\users\jon\Test\Projects\nodatime.org\build\history\serialization\src\NodaTime.Serialization.Protobuf\ProtobufExtensions.cs
    startLine: 95
  assemblies:
  - NodaTime.Serialization.Protobuf
  namespace: NodaTime.Serialization.Protobuf
  summary: "\nConverts a Protobuf <xref href=\"Google.Type.TimeOfDay\" data-throw-if-not-resolved=\"false\"></xref> to a Noda Time <xref href=\"NodaTime.LocalTime\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static LocalTime ToLocalTime(this TimeOfDay timeOfDay)
    parameters:
    - id: timeOfDay
      type: Google.Type.TimeOfDay
      description: The time of day to convert. Must not be null
    return:
      type: NodaTime.LocalTime
      description: The Noda Time representation.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToLocalTime(timeOfDay As TimeOfDay) As LocalTime
  overload: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The time of day is invalid, uses a leap second, or indicates 24:00.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToIsoDayOfWeek(Google.Type.DayOfWeek)
  commentId: M:NodaTime.Serialization.Protobuf.ProtobufExtensions.ToIsoDayOfWeek(Google.Type.DayOfWeek)
  id: ToIsoDayOfWeek(Google.Type.DayOfWeek)
  isExtensionMethod: true
  parent: NodaTime.Serialization.Protobuf.ProtobufExtensions
  langs:
  - csharp
  - vb
  name: ToIsoDayOfWeek(DayOfWeek)
  nameWithType: ProtobufExtensions.ToIsoDayOfWeek(DayOfWeek)
  fullName: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToIsoDayOfWeek(Google.Type.DayOfWeek)
  type: Method
  source:
    id: ToIsoDayOfWeek
    path: C:\users\jon\Test\Projects\nodatime.org\build\history\serialization\src\NodaTime.Serialization.Protobuf\ProtobufExtensions.cs
    startLine: 123
  assemblies:
  - NodaTime.Serialization.Protobuf
  namespace: NodaTime.Serialization.Protobuf
  summary: "\nConverts a Protobuf <xref href=\"Google.Type.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> to a Noda Time <xref href=\"NodaTime.IsoDayOfWeek\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Google.Type.DayOfWeek.Unspecified\" data-throw-if-not-resolved=\"false\"></xref> value maps to <xref href=\"NodaTime.IsoDayOfWeek.None\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IsoDayOfWeek ToIsoDayOfWeek(this DayOfWeek dayOfWeek)
    parameters:
    - id: dayOfWeek
      type: Google.Type.DayOfWeek
      description: The day-of-week value to convert.
    return:
      type: NodaTime.IsoDayOfWeek
      description: The Noda Time representation.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToIsoDayOfWeek(dayOfWeek As DayOfWeek) As IsoDayOfWeek
  overload: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToIsoDayOfWeek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: >-
      <code data-dev-comment-type="paramref" class="paramref">dayOfWeek</code> is neither Unspecified nor
          a valid day-of-week value.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalDate(Google.Type.Date)
  commentId: M:NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalDate(Google.Type.Date)
  id: ToLocalDate(Google.Type.Date)
  isExtensionMethod: true
  parent: NodaTime.Serialization.Protobuf.ProtobufExtensions
  langs:
  - csharp
  - vb
  name: ToLocalDate(Date)
  nameWithType: ProtobufExtensions.ToLocalDate(Date)
  fullName: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalDate(Google.Type.Date)
  type: Method
  source:
    id: ToLocalDate
    path: C:\users\jon\Test\Projects\nodatime.org\build\history\serialization\src\NodaTime.Serialization.Protobuf\ProtobufExtensions.cs
    startLine: 144
  assemblies:
  - NodaTime.Serialization.Protobuf
  namespace: NodaTime.Serialization.Protobuf
  summary: "\nConverts a Protobuf <xref href=\"Google.Type.Date\" data-throw-if-not-resolved=\"false\"></xref> to a Noda Time <xref href=\"NodaTime.LocalDate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe resulting date is always in the ISO calendar. The input date must be completely\nspecified; values with a 0 year, month or day are not supported.\n"
  example: []
  syntax:
    content: public static LocalDate ToLocalDate(this Date date)
    parameters:
    - id: date
      type: Google.Type.Date
      description: The date to convert. Must not be null.
    return:
      type: NodaTime.LocalDate
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToLocalDate(date As Date) As LocalDate
  overload: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalDate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NodaTime.Serialization.Protobuf
  commentId: N:NodaTime.Serialization.Protobuf
  name: NodaTime.Serialization.Protobuf
  nameWithType: NodaTime.Serialization.Protobuf
  fullName: NodaTime.Serialization.Protobuf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.WellKnownTypes.Duration
  commentId: T:Google.Protobuf.WellKnownTypes.Duration
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Duration
  nameWithType: Duration
  fullName: Google.Protobuf.WellKnownTypes.Duration
- uid: NodaTime.Duration
  commentId: T:NodaTime.Duration
  parent: NodaTime
  isExternal: true
  name: Duration
  nameWithType: Duration
  fullName: NodaTime.Duration
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToNodaDuration*
  commentId: Overload:NodaTime.Serialization.Protobuf.ProtobufExtensions.ToNodaDuration
  name: ToNodaDuration
  nameWithType: ProtobufExtensions.ToNodaDuration
  fullName: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToNodaDuration
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: NodaTime
  commentId: N:NodaTime
  isExternal: true
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: Google.Protobuf.WellKnownTypes.Timestamp
  commentId: T:Google.Protobuf.WellKnownTypes.Timestamp
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Timestamp
  nameWithType: Timestamp
  fullName: Google.Protobuf.WellKnownTypes.Timestamp
- uid: NodaTime.Instant
  commentId: T:NodaTime.Instant
  parent: NodaTime
  isExternal: true
  name: Instant
  nameWithType: Instant
  fullName: NodaTime.Instant
- uid: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToInstant*
  commentId: Overload:NodaTime.Serialization.Protobuf.ProtobufExtensions.ToInstant
  name: ToInstant
  nameWithType: ProtobufExtensions.ToInstant
  fullName: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToInstant
- uid: Google.Type.TimeOfDay
  commentId: T:Google.Type.TimeOfDay
  parent: Google.Type
  isExternal: true
  name: TimeOfDay
  nameWithType: TimeOfDay
  fullName: Google.Type.TimeOfDay
- uid: NodaTime.LocalTime
  commentId: T:NodaTime.LocalTime
  parent: NodaTime
  isExternal: true
  name: LocalTime
  nameWithType: LocalTime
  fullName: NodaTime.LocalTime
- uid: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalTime*
  commentId: Overload:NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalTime
  name: ToLocalTime
  nameWithType: ProtobufExtensions.ToLocalTime
  fullName: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalTime
- uid: Google.Type
  commentId: N:Google.Type
  isExternal: true
  name: Google.Type
  nameWithType: Google.Type
  fullName: Google.Type
- uid: Google.Type.DayOfWeek
  commentId: T:Google.Type.DayOfWeek
  parent: Google.Type
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: Google.Type.DayOfWeek
- uid: NodaTime.IsoDayOfWeek
  commentId: T:NodaTime.IsoDayOfWeek
  parent: NodaTime
  isExternal: true
  name: IsoDayOfWeek
  nameWithType: IsoDayOfWeek
  fullName: NodaTime.IsoDayOfWeek
- uid: Google.Type.DayOfWeek.Unspecified
  commentId: F:Google.Type.DayOfWeek.Unspecified
  isExternal: true
- uid: NodaTime.IsoDayOfWeek.None
  commentId: F:NodaTime.IsoDayOfWeek.None
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToIsoDayOfWeek*
  commentId: Overload:NodaTime.Serialization.Protobuf.ProtobufExtensions.ToIsoDayOfWeek
  name: ToIsoDayOfWeek
  nameWithType: ProtobufExtensions.ToIsoDayOfWeek
  fullName: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToIsoDayOfWeek
- uid: Google.Type.Date
  commentId: T:Google.Type.Date
  parent: Google.Type
  isExternal: true
  name: Date
  nameWithType: Date
  fullName: Google.Type.Date
- uid: NodaTime.LocalDate
  commentId: T:NodaTime.LocalDate
  parent: NodaTime
  isExternal: true
  name: LocalDate
  nameWithType: LocalDate
  fullName: NodaTime.LocalDate
- uid: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalDate*
  commentId: Overload:NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalDate
  name: ToLocalDate
  nameWithType: ProtobufExtensions.ToLocalDate
  fullName: NodaTime.Serialization.Protobuf.ProtobufExtensions.ToLocalDate
shouldSkipMarkup: true
